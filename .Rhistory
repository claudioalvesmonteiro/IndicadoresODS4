colnames(count) = c('Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
return(count)
}
countUF = function(var1, var2, codeUF){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$Var2 == 1,], count[count$Var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
count = merge(codeRegiao, count, by = "Territorio")
return(count)
}
countRegiao = function(var1, var2){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
codeRegiao = data.frame(Territorio = c('1', '2', '3', '4', '5'),
Regiao = c('N', 'NE', 'SE', 'S', 'CO'))
count = merge(codeRegiao, count, by = "Territorio")
return(count)
}
countBR(dt$IN_BANHEIRO_PNE)
countUF(dt$CO_UF, dt$IN_BANHEIRO_PNE, codeUF)
countUF = function(var1, var2, codeUF){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$Var2 == 1,], count[count$Var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
count = merge(codeUF, count, by = "Territorio")
return(count)
}
countUF(dt$CO_UF, dt$IN_BANHEIRO_PNE, codeUF)
# codeBR to codeEstado
codeBR$Territorio = as.numeric(substr(codeBR$code_muni, start = 1, stop = 2))
codeUF = codeBR[!duplicated(codeBR$UF),][,c(5,6)]
countBR = function(var2){
# contar numero de casos por territorio
count = data.frame(table(var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(2,4)]
# renomear colunas
colnames(count) = c('Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
return(count)
}
countUF = function(var1, var2, codeUF){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$Var2 == 1,], count[count$Var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
count = merge(codeUF, count, by = "Territorio")
return(count)
}
countRegiao = function(var1, var2){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
codeRegiao = data.frame(Territorio = c('1', '2', '3', '4', '5'),
Regiao = c('N', 'NE', 'SE', 'S', 'CO'))
count = merge(codeRegiao, count, by = "Territorio")
return(count)
}
countBR(dt$IN_BANHEIRO_PNE)
countUF(dt$CO_UF, dt$IN_BANHEIRO_PNE, codeUF)
countUF = function(var1, var2, codeUF){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
count = merge(codeUF, count, by = "Territorio")
return(count)
}
countRegiao = function(var1, var2){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
codeRegiao = data.frame(Territorio = c('1', '2', '3', '4', '5'),
Regiao = c('N', 'NE', 'SE', 'S', 'CO'))
count = merge(codeRegiao, count, by = "Territorio")
return(count)
}
countBR(dt$IN_BANHEIRO_PNE)
countUF(dt$CO_UF, dt$IN_BANHEIRO_PNE, codeUF)
countRegiao(dt$CO_UF, dt$IN_BANHEIRO_PNE)
countRegiao = function(var1, var2){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
codeRegiao = data.frame(Territorio = c('1', '2', '3', '4', '5'),
Regiao = c('N', 'NE', 'SE', 'S', 'CO'))
count = merge(codeRegiao, count, by = "Territorio")
return(count)
}
countBR(dt$IN_BANHEIRO_PNE)
countRegiao(dt$CO_UF, dt$IN_BANHEIRO_PNE)
var1 = dt$CO_REGIAO
var2 = dt$IN_BANHEIRO_PNE
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
count
# combinar dados e retornar
codeRegiao = data.frame(Territorio = c('1', '2', '3', '4', '5'),
Regiao = c('N', 'NE', 'SE', 'S', 'CO'))
count = merge(codeRegiao, count, by = "Territorio")
count
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
count
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
count
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
countRegiao = function(var1, var2){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
codeRegiao = data.frame(Territorio = c('1', '2', '3', '4', '5'),
Regiao = c('N', 'NE', 'SE', 'S', 'CO'))
count = merge(codeRegiao, count, by = "Territorio")
return(count)
}
countBR(dt$IN_BANHEIRO_PNE)
countRegiao(dt$CO_REGIAO, dt$IN_BANHEIRO_PNE)
library(dplyr); library(readr)
library(dplyr); library(readr)
# carregar dados
dt <- read.csv('dados/pre_process/escolas2016.csv')
codeBR <- read.csv("dados/BR_municipio_codigos.csv")
# codeBR to codeEstado
codeBR$Territorio = as.numeric(substr(codeBR$code_muni, start = 1, stop = 2))
codeUF = codeBR[!duplicated(codeBR$UF),][,c(5,6)]
countBR = function(var2, arq){
# contar numero de casos por territorio
count = data.frame(table(var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(2,4)]
# renomear colunas
colnames(count) = c('Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# salvar e retornar
write_excel_csv(count, paste0('resultados/', arq, '_BR' ,'.xls'))
return(count)
}
countUF = function(var1, var2, codeUF, arq){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
count = merge(codeUF, count, by = "Territorio")
write_excel_csv(count, paste0('resultados/', arq, '_UF' ,'.xls'))
return(count)
}
countRegiao = function(var1, var2, arq){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
codeRegiao = data.frame(Territorio = c('1', '2', '3', '4', '5'),
Regiao = c('N', 'NE', 'SE', 'S', 'CO'))
count = merge(codeRegiao, count, by = "Territorio")
write_excel_csv(count, paste0('resultados/', arq, '_REGIAO' ,'.xls'))
return(count)
}
countBR(dt$IN_BANHEIRO_PNE, 'IN_BANHEIRO_PNE')
countRegiao(dt$CO_REGIAO, dt$IN_BANHEIRO_PNE, 'IN_BANHEIRO_PNE')
countUF(dt$CO_UF, dt$IN_BANHEIRO_PNE, codeUF, 'IN_BANHEIRO_PNE')
chr(2010)
as.character(2010)
# VM
# Claudio Alves Monteiro @
# 20/04/2019
library(dplyr); library(readr)
# carregar dados
dt <- read.csv('dados/pre_process/escolas2016.csv')
codeBR <- read.csv("dados/BR_municipio_codigos.csv")
#===================#
# preprocess
#==================#
# codeBR to codeEstado
codeBR$Territorio = as.numeric(substr(codeBR$code_muni, start = 1, stop = 2))
codeUF = codeBR[!duplicated(codeBR$UF),][,c(5,6)]
countBR = function(var2, arq){
# contar numero de casos por territorio
count = data.frame(table(var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(2,4)]
# renomear colunas
colnames(count) = c('Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# salvar e retornar
write_excel_csv(count, paste0('resultados/', arq, '_BR' ,'.xls'))
return(count)
}
countUF = function(var1, var2, codeUF, arq){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
count = merge(codeUF, count, by = "Territorio")
write_excel_csv(count, paste0('resultados/', arq, '_UF' ,'.xls'))
return(count)
}
countRegiao = function(var1, var2, arq){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
codeRegiao = data.frame(Territorio = c('1', '2', '3', '4', '5'),
Regiao = c('N', 'NE', 'SE', 'S', 'CO'))
count = merge(codeRegiao, count, by = "Territorio")
write_excel_csv(count, paste0('resultados/', arq, '_REGIAO', ano ,'.xls'))
return(count)
}
#====================#
# 4.A.1a - BANHEIRO
#================#
countBR(dt$IN_BANHEIRO_PNE, 'IN_BANHEIRO_PNE', 2016)
countRegiao(dt$CO_REGIAO, dt$IN_BANHEIRO_PNE, 'IN_BANHEIRO_PNE', 2016)
countUF(dt$CO_UF, dt$IN_BANHEIRO_PNE, codeUF, 'IN_BANHEIRO_PNE', 2016)
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
library(dplyr); library(readr)
source('codigos/pacoteAnalise.R')
# carregar dados
dt1717 <- read.csv('dados/pre_process/escolas2016.csv')
codeBR <- read.csv("dados/BR_municipio_codigos.csv")
# codeBR to codeEstado
codeBR$Territorio = as.numeric(substr(codeBR$code_muni, start = 1, stop = 2))
codeUF = codeBR[!duplicated(codeBR$UF),][,c(5,6)]
countBR(dt17$IN_BANHEIRO_PNE, 'IN_BANHEIRO_PNE', 2017)
rm(dt1717)
# carregar dados
dt17 <- read.csv('dados/pre_process/escolas2016.csv')
countBR(dt17$IN_BANHEIRO_PNE, 'IN_BANHEIRO_PNE', 2017)
countRegiao(dt17$CO_REGIAO, dt17$IN_BANHEIRO_PNE, 'IN_BANHEIRO_PNE', 2017)
countUF(dt17$CO_UF, dt17$IN_BANHEIRO_PNE, codeUF, 'IN_BANHEIRO_PNE', 2017)
countBR(dt17$IN_BANHEIRO_PNE, 'IN_BANHEIRO_PNE', 2017)
countRegiao(dt17$CO_REGIAO, dt17$IN_BANHEIRO_PNE, 'IN_BANHEIRO_PNE', 2017)
countUF(dt17$CO_UF, dt17$IN_BANHEIRO_PNE, codeUF, 'IN_BANHEIRO_PNE', 2017)
countBR(dt17$IN_DEPENDENCIAS_PNE, 'IN_DEPENDENCIAS_PNE', 2017)
countRegiao(dt17$CO_REGIAO, dt17$IN_DEPENDENCIAS_PNE, 'IN_DEPENDENCIAS_PNE', 2017)
countUF(dt17$CO_UF, dt17$IN_DEPENDENCIAS_PNE, codeUF, 'IN_DEPENDENCIAS_PNE', 2017)
countBR(dt17$IN_SALA_ATENDIMENTO_ESPECIAL, 'IN_SALA_ATENDIMENTO_ESPECIAL', 2017)
countRegiao(dt17$IN_SALA_ATENDIMENTO_ESPECIAL, dt17$IN_SALA_ATENDIMENTO_ESPECIAL, 'IN_SALA_ATENDIMENTO_ESPECIAL', 2017)
countRegiao(dt17$CO_REGIAO, dt17$IN_SALA_ATENDIMENTO_ESPECIAL, 'IN_SALA_ATENDIMENTO_ESPECIAL', 2017)
countUF(dt17$CO_UF, dt17$IN_SALA_ATENDIMENTO_ESPECIAL, codeUF, 'IN_SALA_ATENDIMENTO_ESPECIAL', 2017)
dt16 <- read.csv('dados/pre_process/escolas2016.csv')
countBR(dt16$IN_SALA_ATENDIMENTO_ESPECIAL, 'IN_SALA_ATENDIMENTO_ESPECIAL', 2016)
countRegiao(dt16$CO_REGIAO, dt16$IN_SALA_ATENDIMENTO_ESPECIAL, 'IN_SALA_ATENDIMENTO_ESPECIAL', 2016)
countUF(dt16$CO_UF, dt16$IN_SALA_ATENDIMENTO_ESPECIAL, codeUF, 'IN_SALA_ATENDIMENTO_ESPECIAL', 2016)
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
# carregar dados
dt17 <- read.csv('dados/pre_process/escolas2016.csv')
table(dt17$TP_DEPENDENCIA)
table(dt17$IN_CONVENIADA_PP)
# selecionar
dt17 = dt17[dt17$IN_CONVENIADA_PP == '1',]
# carregar dados
#dt16 <- read.csv('dados/pre_process/escolas2016.csv')
dt17 <- read.csv('dados/pre_process/escolas2017.csv')
# selecionar
dt17 = dt17[dt17$IN_CONVENIADA_PP == 1,]
# selecionar
dt17 = dt17[dt17$IN_CONVENIADA_PP == 1,]
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
library(dplyr); library(readr)
source('codigos/pacoteAnalise.R')
# carregar dados
dt16 <- read.csv('dados/pre_process/escolas2016.csv')
library(dplyr); library(readr)
source('codigos/pacoteAnalise.R')
# carregar dados
dt16 <- read.csv('dados/pre_process/escolas2016.csv')
# codeBR to codeEstado
codeBR$Territorio = as.numeric(substr(codeBR$code_muni, start = 1, stop = 2))
codeUF = codeBR[!duplicated(codeBR$UF),][,c(5,6)]
codeBR <- read.csv("dados/BR_municipio_codigos.csv")
# codeBR to codeEstado
codeBR$Territorio = as.numeric(substr(codeBR$code_muni, start = 1, stop = 2))
codeUF = codeBR[!duplicated(codeBR$UF),][,c(5,6)]
countBR(dt17$IN_BANHEIRO_PNE, '4a1b/total_IN_BANHEIRO_PNE', 2017)
rm(dt16)
dt17 <- read.csv('dados/pre_process/escolas2017.csv')
countBR(dt17$IN_BANHEIRO_PNE, '4a1b/total_IN_BANHEIRO_PNE', 2017)
countRegiao(dt17$CO_REGIAO, dt17$IN_BANHEIRO_PNE, '4a1b/total_IN_BANHEIRO_PNE', 2017)
countUF(dt17$CO_UF, dt17$IN_BANHEIRO_PNE, codeUF, '4a1b/total_IN_BANHEIRO_PNE', 2017)
# selecionar
key = 1 # publica
#dt16 = dt16[dt16$IN_CONVENIADA_PP == key,]
dt17 = dt17[dt17$IN_CONVENIADA_PP == key,]
countBR(dt17$IN_BANHEIRO_PNE, '4a1b/publica_IN_BANHEIRO_PNE', 2017)
countRegiao(dt17$CO_REGIAO, dt17$IN_BANHEIRO_PNE, '4a1b/publica_IN_BANHEIRO_PNE', 2017)
countUF(dt17$CO_UF, dt17$IN_BANHEIRO_PNE, codeUF, '4a1b/publica_IN_BANHEIRO_PNE', 2017)
countBR(dt17$IN_BANHEIRO_PNE, '4a1b/publica_IN_BANHEIRO_PNE', 2017)
countRegiao(dt17$CO_REGIAO, dt17$IN_BANHEIRO_PNE, '4a1b/publica_IN_BANHEIRO_PNE', 2017)
countUF(dt17$CO_UF, dt17$IN_BANHEIRO_PNE, codeUF, '4a1b/publica_IN_BANHEIRO_PNE', 2017)
dt17 <- read.csv('dados/pre_process/escolas2017.csv')
countBR(dt17$IN_BANHEIRO_PNE, '4a1b/total_IN_BANHEIRO_PNE', 2017)
countRegiao(dt17$CO_REGIAO, dt17$IN_BANHEIRO_PNE, '4a1b/total_IN_BANHEIRO_PNE', 2017)
countUF(dt17$CO_UF, dt17$IN_BANHEIRO_PNE, codeUF, '4a1b/total_IN_BANHEIRO_PNE', 2017)
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/pacoteAnalise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
table(dt17$CO_REGIAO, dt17$IN_BANHEIRO_PNE)
data.frame(table(dt17$CO_REGIAO, dt17$IN_BANHEIRO_PNE))
count= data.frame(table(dt17$CO_REGIAO, dt17$IN_BANHEIRO_PNE))
table(dt17$CO_REGIAO, dt17$IN_BANHEIRO_PNE)
count = cbind(count[count$Var2 == 1,], count[count$Var2 == 0,])[,c(1,3,6)]
count
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
codeRegiao = data.frame(Territorio = c('1', '2', '3', '4', '5'),
Regiao = c('N', 'NE', 'SE', 'S', 'CO'))
count = merge(codeRegiao, count, by = "Territorio")
count
# selecionar
key = 1 # publica
#dt16 = dt16[dt16$IN_CONVENIADA_PP == key,]
dt17 = dt17[dt17$IN_CONVENIADA_PP == key,]
dt17 <- read.csv('dados/pre_process/escolas2017.csv')
codeBR <- read.csv("dados/BR_municipio_codigos.csv")
# codeBR to codeEstado
codeBR$Territorio = as.numeric(substr(codeBR$code_muni, start = 1, stop = 2))
codeUF = codeBR[!duplicated(codeBR$UF),][,c(5,6)]
# selecionar
key = 1 # publica
#dt16 = dt16[dt16$IN_CONVENIADA_PP == key,]
dt17 = dt17[dt17$IN_CONVENIADA_PP == key,]
countBR(dt17$IN_BANHEIRO_PNE, '4a1b/total_IN_BANHEIRO_PNE', 2017)
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/pacoteAnalise.R')
countBR(dt17$IN_BANHEIRO_PNE, '4a1b/total_IN_BANHEIRO_PNE', 2017)
countRegiao(dt17$CO_REGIAO, dt17$IN_BANHEIRO_PNE, '4a1b/total_IN_BANHEIRO_PNE', 2017)
countUF(dt17$CO_UF, dt17$IN_BANHEIRO_PNE, codeUF, '4a1b/total_IN_BANHEIRO_PNE', 2017)
var1 = dt17$CO_REGIAO
var2 = dt17$IN_BANHEIRO_PNE
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
count = data.frame(table(var1, var2))
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
count
table(dt17$CO_REGIAO )
table(dt17$CO_REGIAO, dt17$IN_BANHEIRO_PNE )
library(Amelia)
missmap(dt17)
dt17 <- read.csv('dados/pre_process/escolas2017.csv')
x = dt17[complete.cases(dt17$IN_BANHEIRO_PNE),]
table(dt17$CO_REGIAO,dt17$IN_BANHEIRO_PNE)
sum(is.na(dt17$TP_DEPENDENCIA))
sum(is.na(dt17$IN_CONVENIADA_PP))
table(dt17$TP_DEPENDENCIA)
library(dplyr); library(readr)
source('codigos/pacoteAnalise.R')
# carregar dados
dt16 <- read.csv('dados/pre_process/escolas2016.csv')
dt17 <- read.csv('dados/pre_process/escolas2017.csv')
codeBR <- read.csv("dados/BR_municipio_codigos.csv")
# codeBR to codeEstado
codeBR$Territorio = as.numeric(substr(codeBR$code_muni, start = 1, stop = 2))
codeUF = codeBR[!duplicated(codeBR$UF),][,c(5,6)]
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
countBR(dt16$IN_BANHEIRO_PNE, paste0('4a1b/', key ,'IN_BANHEIRO_PNE'), 2016)
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
library(dplyr); library(readr); library(xlsx)
library(dplyr); library(xlsx)
?write.xlsx
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
knitr::opts_chunk$set(echo = TRUE)
# carregar shape
shape = shapefile("dados/geo/Brasil.shp")
# carregar pacotes
library(raster); library(rgdal); library(maptools); library(plyr); library(ggmap); library(readxl); library(ggplot2); library(png); library(stringr); library(ggpubr); library(viridis); library(maps)
# carregar pacotes
library(raster); library(rgdal); library(maptools); library(plyr); library(ggmap); library(readxl); library(ggplot2); library(png); library(stringr); library(ggpubr); library(viridis); library(maps)
library(mapdata);  library(ggrepel);  library(sp); library(maps); library(maptools); library(xlsx); library(dplyr); library(stringi); library(tidyverse)
if (!require(gpclib)) install.packages("gpclib", type="source")
gpclibPermit()
# carregar shape
shape = shapefile("dados/geo/Brasil.shp")
# criar dataframe do shapefile
shape@data$id = rownames(shape@data)
brasil.points = fortify(shape, region="id")
brasil.points = fortify(shape, region="id")
brasil.df = join(brasil.points, shape@data, by="id")
# criar dataframe do shapefile
points = data.frame(long = c(-37.526059,  -37.518333, -37.676691, -38.536084, -43.485116, -34.906612, -38.407901),
lat = c(-9.122577, -5.450296, -9.276534, -3.780503, -22.703076, -8.055205, -12.922983),
cidades = c("Canapi", "Dix-Septrosado", "Inhapi", "Fortaleza", "Nova Iguaçu", "Recife",  "Salvador"))
