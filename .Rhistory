e16 <- read.csv("dados/pre_process/escolas2016.csv")
dt <- read.csv("dados/pre_process/escolas2016.csv")
rm(e16)
data.frame(table(dt$IN_ESGOTO_INEXISTENTE, dt$IN_SALA_ATENDIMENTO_ESPECIAL))
data.frame(table(dt$CO_REGIAO, dt$IN_SALA_ATENDIMENTO_ESPECIAL))
data.frame(table(dt$CO_UF, dt$IN_SALA_ATENDIMENTO_ESPECIAL))
data.frame(table(dt$CO_UF, dt$IN_ESGOTO_INEXISTENTE))
data.frame(table(dt$CO_UF, dt$IN_AGUA_INEXISTENTE))
data.frame(table(dt$CO_UF, dt$IN_DEPENDENCIAS_PNE))
count = data.frame(table(dt$CO_UF, dt$IN_DEPENDENCIAS_PNE))
?cbind
merge(count[count$Var2 == 1,], count[count$Var2 == 1,], by = "Var2")
count = data.frame(table(dt$CO_UF, dt$IN_DEPENDENCIAS_PNE))
x = merge(count[count$Var2 == 1,], count[count$Var2 == 1,], by = "Var2")
View(x)
x = cbind(count[count$Var2 == 1,], count[count$Var2 == 1,])
View(x)
x = cbind(count[count$Var2 == 1,], count[count$Var2 == 0,])
x
View(x)
count = data.frame(table(dt$CO_UF, dt$IN_DEPENDENCIAS_PNE))
count = cbind(count[count$Var2 == 1,], count[count$Var2 == 0,])
colnames(count)
count = data.frame(table(dt$CO_UF, dt$IN_DEPENDENCIAS_PNE))
count = cbind(count[count$Var2 == 1,], count[count$Var2 == 0,])[,c(1,3,6)]
colnames(count)
dt <- read.csv('dados/pre_process/escolas2016.csv')
count = data.frame(table(dt$CO_UF, dt$IN_DEPENDENCIAS_PNE))
count = cbind(count[count$Var2 == 1,], count[count$Var2 == 0,])[,c(1,3,6)]
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
count
library(dplyr)
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, procentagem = round((Freq1/Total)*100) )
count = mutate(count, procentagem = round((Freq1/total)*100) )
count
# carregar dados
dt <- read.csv('dados/pre_process/escolas2016.csv')
codeBR <- read_csv("dados/BR_municipio_codigos.csv")
codeBR <- read.csv("dados/BR_municipio_codigos.csv")
# contar numero de casos por territorio
count = data.frame(table(dt$CO_UF, dt$IN_DEPENDENCIAS_PNE))
rm(dt)
library(dplyr)
# carregar dados
dt <- read.csv('dados/pre_process/escolas2016.csv')
codeBR <- read.csv("dados/BR_municipio_codigos.csv")
# codeBR to codeEstado
codeBR$Territorio = as.numeric(substr(codeBR$code_muni, start = 1, stop = 2))
codeUF = codeBR[!duplicated(codeBR$UF),][,c(5,6)]
countBR = function(var2){
# contar numero de casos por territorio
count = data.frame(table(var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(2,4)]
# renomear colunas
colnames(count) = c('Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
return(count)
}
countUF = function(var1, var2, codeUF){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$Var2 == 1,], count[count$Var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
count = merge(codeRegiao, count, by = "Territorio")
return(count)
}
countRegiao = function(var1, var2){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
codeRegiao = data.frame(Territorio = c('1', '2', '3', '4', '5'),
Regiao = c('N', 'NE', 'SE', 'S', 'CO'))
count = merge(codeRegiao, count, by = "Territorio")
return(count)
}
countBR(dt$IN_BANHEIRO_PNE)
countUF(dt$CO_UF, dt$IN_BANHEIRO_PNE, codeUF)
countUF = function(var1, var2, codeUF){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$Var2 == 1,], count[count$Var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
count = merge(codeUF, count, by = "Territorio")
return(count)
}
countUF(dt$CO_UF, dt$IN_BANHEIRO_PNE, codeUF)
# codeBR to codeEstado
codeBR$Territorio = as.numeric(substr(codeBR$code_muni, start = 1, stop = 2))
codeUF = codeBR[!duplicated(codeBR$UF),][,c(5,6)]
countBR = function(var2){
# contar numero de casos por territorio
count = data.frame(table(var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(2,4)]
# renomear colunas
colnames(count) = c('Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
return(count)
}
countUF = function(var1, var2, codeUF){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$Var2 == 1,], count[count$Var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
count = merge(codeUF, count, by = "Territorio")
return(count)
}
countRegiao = function(var1, var2){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
codeRegiao = data.frame(Territorio = c('1', '2', '3', '4', '5'),
Regiao = c('N', 'NE', 'SE', 'S', 'CO'))
count = merge(codeRegiao, count, by = "Territorio")
return(count)
}
countBR(dt$IN_BANHEIRO_PNE)
countUF(dt$CO_UF, dt$IN_BANHEIRO_PNE, codeUF)
countUF = function(var1, var2, codeUF){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
count = merge(codeUF, count, by = "Territorio")
return(count)
}
countRegiao = function(var1, var2){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
codeRegiao = data.frame(Territorio = c('1', '2', '3', '4', '5'),
Regiao = c('N', 'NE', 'SE', 'S', 'CO'))
count = merge(codeRegiao, count, by = "Territorio")
return(count)
}
countBR(dt$IN_BANHEIRO_PNE)
countUF(dt$CO_UF, dt$IN_BANHEIRO_PNE, codeUF)
countRegiao(dt$CO_UF, dt$IN_BANHEIRO_PNE)
countRegiao = function(var1, var2){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
codeRegiao = data.frame(Territorio = c('1', '2', '3', '4', '5'),
Regiao = c('N', 'NE', 'SE', 'S', 'CO'))
count = merge(codeRegiao, count, by = "Territorio")
return(count)
}
countBR(dt$IN_BANHEIRO_PNE)
countRegiao(dt$CO_UF, dt$IN_BANHEIRO_PNE)
var1 = dt$CO_REGIAO
var2 = dt$IN_BANHEIRO_PNE
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
count
# combinar dados e retornar
codeRegiao = data.frame(Territorio = c('1', '2', '3', '4', '5'),
Regiao = c('N', 'NE', 'SE', 'S', 'CO'))
count = merge(codeRegiao, count, by = "Territorio")
count
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
count
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
count
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
countRegiao = function(var1, var2){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
codeRegiao = data.frame(Territorio = c('1', '2', '3', '4', '5'),
Regiao = c('N', 'NE', 'SE', 'S', 'CO'))
count = merge(codeRegiao, count, by = "Territorio")
return(count)
}
countBR(dt$IN_BANHEIRO_PNE)
countRegiao(dt$CO_REGIAO, dt$IN_BANHEIRO_PNE)
library(dplyr); library(readr)
library(dplyr); library(readr)
# carregar dados
dt <- read.csv('dados/pre_process/escolas2016.csv')
codeBR <- read.csv("dados/BR_municipio_codigos.csv")
# codeBR to codeEstado
codeBR$Territorio = as.numeric(substr(codeBR$code_muni, start = 1, stop = 2))
codeUF = codeBR[!duplicated(codeBR$UF),][,c(5,6)]
countBR = function(var2, arq){
# contar numero de casos por territorio
count = data.frame(table(var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(2,4)]
# renomear colunas
colnames(count) = c('Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# salvar e retornar
write_excel_csv(count, paste0('resultados/', arq, '_BR' ,'.xls'))
return(count)
}
countUF = function(var1, var2, codeUF, arq){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
count = merge(codeUF, count, by = "Territorio")
write_excel_csv(count, paste0('resultados/', arq, '_UF' ,'.xls'))
return(count)
}
countRegiao = function(var1, var2, arq){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
codeRegiao = data.frame(Territorio = c('1', '2', '3', '4', '5'),
Regiao = c('N', 'NE', 'SE', 'S', 'CO'))
count = merge(codeRegiao, count, by = "Territorio")
write_excel_csv(count, paste0('resultados/', arq, '_REGIAO' ,'.xls'))
return(count)
}
countBR(dt$IN_BANHEIRO_PNE, 'IN_BANHEIRO_PNE')
countRegiao(dt$CO_REGIAO, dt$IN_BANHEIRO_PNE, 'IN_BANHEIRO_PNE')
countUF(dt$CO_UF, dt$IN_BANHEIRO_PNE, codeUF, 'IN_BANHEIRO_PNE')
chr(2010)
as.character(2010)
# VM
# Claudio Alves Monteiro @
# 20/04/2019
library(dplyr); library(readr)
# carregar dados
dt <- read.csv('dados/pre_process/escolas2016.csv')
codeBR <- read.csv("dados/BR_municipio_codigos.csv")
#===================#
# preprocess
#==================#
# codeBR to codeEstado
codeBR$Territorio = as.numeric(substr(codeBR$code_muni, start = 1, stop = 2))
codeUF = codeBR[!duplicated(codeBR$UF),][,c(5,6)]
countBR = function(var2, arq){
# contar numero de casos por territorio
count = data.frame(table(var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(2,4)]
# renomear colunas
colnames(count) = c('Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# salvar e retornar
write_excel_csv(count, paste0('resultados/', arq, '_BR' ,'.xls'))
return(count)
}
countUF = function(var1, var2, codeUF, arq){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
count = merge(codeUF, count, by = "Territorio")
write_excel_csv(count, paste0('resultados/', arq, '_UF' ,'.xls'))
return(count)
}
countRegiao = function(var1, var2, arq){
# contar numero de casos por territorio
count = data.frame(table(var1, var2))
# combinar dados em wide
count = cbind(count[count$var2 == 1,], count[count$var2 == 0,])[,c(1,3,6)]
# renomear colunas
colnames(count) = c('Territorio', 'Freq1', 'Freq0')
# criar total e porcentagem
count = mutate(count, total = Freq1+Freq0)
count = mutate(count, porcentagem = round((Freq1/total)*100,1) )
# combinar dados e retornar
codeRegiao = data.frame(Territorio = c('1', '2', '3', '4', '5'),
Regiao = c('N', 'NE', 'SE', 'S', 'CO'))
count = merge(codeRegiao, count, by = "Territorio")
write_excel_csv(count, paste0('resultados/', arq, '_REGIAO', ano ,'.xls'))
return(count)
}
#====================#
# 4.A.1a - BANHEIRO
#================#
countBR(dt$IN_BANHEIRO_PNE, 'IN_BANHEIRO_PNE', 2016)
countRegiao(dt$CO_REGIAO, dt$IN_BANHEIRO_PNE, 'IN_BANHEIRO_PNE', 2016)
countUF(dt$CO_UF, dt$IN_BANHEIRO_PNE, codeUF, 'IN_BANHEIRO_PNE', 2016)
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
library(dplyr); library(readr)
source('codigos/pacoteAnalise.R')
# carregar dados
dt1717 <- read.csv('dados/pre_process/escolas2016.csv')
codeBR <- read.csv("dados/BR_municipio_codigos.csv")
# codeBR to codeEstado
codeBR$Territorio = as.numeric(substr(codeBR$code_muni, start = 1, stop = 2))
codeUF = codeBR[!duplicated(codeBR$UF),][,c(5,6)]
countBR(dt17$IN_BANHEIRO_PNE, 'IN_BANHEIRO_PNE', 2017)
rm(dt1717)
# carregar dados
dt17 <- read.csv('dados/pre_process/escolas2016.csv')
countBR(dt17$IN_BANHEIRO_PNE, 'IN_BANHEIRO_PNE', 2017)
countRegiao(dt17$CO_REGIAO, dt17$IN_BANHEIRO_PNE, 'IN_BANHEIRO_PNE', 2017)
countUF(dt17$CO_UF, dt17$IN_BANHEIRO_PNE, codeUF, 'IN_BANHEIRO_PNE', 2017)
countBR(dt17$IN_BANHEIRO_PNE, 'IN_BANHEIRO_PNE', 2017)
countRegiao(dt17$CO_REGIAO, dt17$IN_BANHEIRO_PNE, 'IN_BANHEIRO_PNE', 2017)
countUF(dt17$CO_UF, dt17$IN_BANHEIRO_PNE, codeUF, 'IN_BANHEIRO_PNE', 2017)
countBR(dt17$IN_DEPENDENCIAS_PNE, 'IN_DEPENDENCIAS_PNE', 2017)
countRegiao(dt17$CO_REGIAO, dt17$IN_DEPENDENCIAS_PNE, 'IN_DEPENDENCIAS_PNE', 2017)
countUF(dt17$CO_UF, dt17$IN_DEPENDENCIAS_PNE, codeUF, 'IN_DEPENDENCIAS_PNE', 2017)
countBR(dt17$IN_SALA_ATENDIMENTO_ESPECIAL, 'IN_SALA_ATENDIMENTO_ESPECIAL', 2017)
countRegiao(dt17$IN_SALA_ATENDIMENTO_ESPECIAL, dt17$IN_SALA_ATENDIMENTO_ESPECIAL, 'IN_SALA_ATENDIMENTO_ESPECIAL', 2017)
countRegiao(dt17$CO_REGIAO, dt17$IN_SALA_ATENDIMENTO_ESPECIAL, 'IN_SALA_ATENDIMENTO_ESPECIAL', 2017)
countUF(dt17$CO_UF, dt17$IN_SALA_ATENDIMENTO_ESPECIAL, codeUF, 'IN_SALA_ATENDIMENTO_ESPECIAL', 2017)
dt16 <- read.csv('dados/pre_process/escolas2016.csv')
countBR(dt16$IN_SALA_ATENDIMENTO_ESPECIAL, 'IN_SALA_ATENDIMENTO_ESPECIAL', 2016)
countRegiao(dt16$CO_REGIAO, dt16$IN_SALA_ATENDIMENTO_ESPECIAL, 'IN_SALA_ATENDIMENTO_ESPECIAL', 2016)
countUF(dt16$CO_UF, dt16$IN_SALA_ATENDIMENTO_ESPECIAL, codeUF, 'IN_SALA_ATENDIMENTO_ESPECIAL', 2016)
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
source('~/Documents/Consultorias/ODS4-censo-escolar/codigos/analise.R')
